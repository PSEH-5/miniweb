apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "testimage.fullname" . }}
  labels:
{{ include "testimage.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "testimage.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "testimage.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      # initContainers:
      #  - name: init-kafka
      #    image: busybox
      #    imagePullPolicy: {{ .Values.image.pullPolicy }}
         # command: [
         #        "sh", "-c",
         #       "until nc -w 3 -z ie-kafka 9092; do echo waiting for kafka to become available ; sleep 7 ; done"
         #  ]
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8081
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /actuator/health
          #     port: http
          #   initialDelaySeconds: 30
          #   periodSeconds: 30
          # readinessProbe:
          #   httpGet:
          #     path: /actuator/health
          #     port: http
          #   initialDelaySeconds: 30
          #   periodSeconds: 30
          env:
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgresql-postgresql
                key: postgresql-password
          - name: JAVA_OPTS
            value: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=1 -Xms25M -Xmx500M -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/csfnfs/"
          - name: KUBECONFIG
            value: "/etc/kubernetes/admin.conf"
          # volumeMounts:
          #  - name: bash-volume
          #    mountPath: /opt/bashKey
          #    type: DirectoryOrCreate
          #  - name: kubeconfig
          #    mountPath: /etc/kubernetes/admin.conf
          #    readOnly: true
          #  - mountPath: /opt/data/logs  
          #    name: nfs-dt
          #    type: DirectoryOrCreate
          #  - mountPath: /opt/data/containers
          #    name: container-log
          #    type: DirectoryOrCreate
          #  - mountPath: /opt/data/audit
          #    name: audit-log
          #    type: DirectoryOrCreate
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      # - name: bash-volume
      #   secret:
      #     secretName: bash-key
      # - name: kubeconfig
      #   hostPath:
      #     path: /etc/kubernetes/admin.conf
      #     type: File
      # - name: container-log
      #   hostPath:
      #     path: /var/lib/docker/containers
      #     type: Directory
      # - name: audit-log
      #   hostPath:
      #     path: /var/log/audit
      #     type: Directory
      - name: database
        secret:
          secretName: postgresql-postgresql
      # - name: nfs-dt
      #   persistentVolumeClaim:
      #     claimName: nfs
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
